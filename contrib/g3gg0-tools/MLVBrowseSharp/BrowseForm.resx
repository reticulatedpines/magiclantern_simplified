<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEODg4CAgIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAATExN8fHx9fX2goKB2dnYlJSUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuLi6QkJCenp6ZmZmfn5/R0dHFxcWwsLBcXFwZGRkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwNUVFSZmZmbm5ucnJykpKSd
        nZ28vLzQ0NDKysq3t7fDw8OioqJKSkoHBwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAASEhJ2dnaYmJiZmZmampqbm5urq6uwsLCkpKShoaGvr6+tra3R0dHR0dG2tra8vLyBgYErKysAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuLi6JiYmVlZWXl5eYmJiZmZmampqzs7OxsbGnp6e1tbW1tbWq
        qqqhoaGtra2ioqLR0dHR0dHIyMivr69fX18SEhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwNRUVGRkZGTk5OUlJSVlZWW
        lpaYmJiZmZm9vb2xsbGnp6e1tbW1tbW1tbW1tbW1tbWqqqqmpqa8vLzQ0NCnp6fPz8/Gxsafn58+Pj4C
        AgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAASEhJvb2+QkJCRkZGSkpKTk5OUlJSVlZWWlpaYmJjGxsaxsbGlpaW1tbW1tbW1tbW1tbW1tbW4uLi8
        vLy4uLiurq6goKDHx8fR0dG9vb3Dw8PDw8N9fX0aGhoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCyDg4ONjY2Ojo6Pj4+RkZGSkpKTk5OUlJSVlZWWlpbOzs6x
        sbGkpKS1tbW1tbW1tbW1tbW7u7vCwsK9vb3AwMDExMTGxsa4uLiqqqqxsbHAwMDR0dHR0dHMzMywsLBO
        Tk4FBQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBARMTEyJiYmLi4uMjIyNjY2O
        jo6Pj4+RkZGSkpKTk5OUlJSVlZXX19exsbGkpKS1tbW1tbW1tbW1tbXExMSzs7O7u7vNzc3Hx8fIyMjM
        zMzPz8/Q0NC1tbWsrKy8vLyoqKjR0dHNzc3Nzc2Dg4MkJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAARERFra2uHh4eJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCSkpKTk5OUlJTu7u6zs7OkpKS1tbW1tbW1
        tbW1tbXExMScnJxgYGCUlJSzs7PDw8PU1NTR0dHT09PX19fa2trT09O4uLizs7PMzMzR0dG4uLjNzc3B
        wcFEREQAAAAAAAAAAAAAAAAAAAAAAAAaGhp8fHyFhYWGhoaHh4eIiIiKioqLi4uMjIyNjY2Ojo6Pj4+Q
        kJCSkpKmpqb////i4uK9vb21tbW1tbW1tbW1tbW8vLyenp5cXFyHh4e8vLy4uLiJiYmxsbHS0tLa2trb
        29vf39/i4uLj4+PHx8fJycmmpqbR0dHR0dHJyckAAAAAAAAAAAAAAAAAAAAAAABDQ0ODg4OEhISFhYWG
        hoaHh4eIiIiJiYmLi4uMjIyNjY2Ojo6Pj4+urq7Q0NCwsLDExMTb29vn5+fQ0NC4uLi1tbW3t7e0tLSi
        oqKxsbG8vLyxsbF6enp6enp7e3umpqbCwsLe3t7j4+Pm5ubq6uru7u7i4uK9vb2vr6/JyckAAAAAAAAA
        AAAAAAAAAAAAAABFRUWCgoKDg4OEhISFhYWGhoaHh4eIiIiJiYmLi4uMjIyQkJDIyMi1tbWfn5+wsLC1
        tbW1tbWwsLC2trba2trf39/Jycm8vLy/v7/Dw8O3t7ekpKSAgIB6enp6enq5ubnLy8vGxsanp6fMzMzp
        6enu7u7y8vL19fXS0tLg4OAAAAAAAAAAAAAAAAAAAAAAAABISEiCgoKCgoKDg4OEhISFhYWGhoaHh4eI
        iIiJiYmZmZnJycmjo6Oenp6fn5+0tLS1tbW1tbWXl5elpaWdnZ2np6fHx8fZ2dnd3d3Ly8vHx8fKysrL
        y8u1tbWWlpa9vb3Ly8uXl5dZWVmhoaHX19fv7+/y8vL29vbLy8vp6ekAAAAAAAAAAAAAAAAAAAAAAABM
        TEyCgoKCgoKCgoKCgoKEhISFhYWGhoaHh4erq6u2traampqbm5udnZ2enp7AwMC1tbW1tbW1tbWpqamc
        nJyhoaGampqmpqakpKTR0dHe3t7d3d3S0tLS0tLW1tbPz8+8vLynp6dqamqrq6vW1tbv7+/z8/P29vbT
        09P09PQAAAAAAAAAAAAAAAAAAAAAAABNTU2CgoKCgoKCgoKCgoKCgoKDg4OKiorBwcGioqKYmJiZmZma
        mpqbm5udnZ3Ozs61tbWurq5+fn6pqamtra2rq6usrKyurq6ampq7u7vCwsLOzs7e3t7f39/f39/a2tre
        3t7h4eHMzMy7u7va2trw8PDz8/P39/fT09P4+PgAAAAAAAAAAAAAAAAAAAAAAABUVFSCgoKCgoKCgoKC
        goKCgoKampq5ubmWlpaWlpaXl5eYmJiZmZmampqbm5vb29u1tbWMjIyKioqTk5PIyMioqKi1tbWvr6+Y
        mJisrKzCwsLGxsbJycnOzs7Y2Njh4eHf39/m5ubl5eXp6ent7e3w8PD09PT4+PjT09P29vYPDw8AAAAA
        AAAAAAAAAAAAAABUVFSCgoKCgoKCgoKDg4O3t7ejo6OSkpKTk5OUlJSWlpaXl5eYmJiZmZmdnZ319fW1
        tbWPj4+QkJDIyMjIyMijo6OpqamEhISysrKRkZGvr6/GxsbKysrNzc3R0dHU1NTX19fg4ODd3d3f39/u
        7u7x8fH09PT4+PjT09Pw8PASEhIAAAAAAAAAAAAAAAAAAABZWVmCgoKCgoKLi4u9vb2SkpKQkJCRkZGS
        kpKTk5OUlJSVlZWXl5eYmJjHx8f+/v7j4+O+vr54eHiJiYmOjo6rq6uOjo6dnZ3AwMCtra2tra3Hx8e5
        ubmampqysrLT09PZ2dnc3Nzf39/c3Nzi4uLZ2dni4uL4+PjT09Pw8PAdHR0AAAAAAAAAAAAAAAAAAABb
        W1uAgICqqqqnp6eMjIyNjY2Pj4+QkJCRkZGSkpKTk5OUlJSWlpbLy8u5ubmurq6/v7/V1dXo6OjR0dG7
        u7u1tbWdnZ1+fn7Hx8fHx8eioqK5ubmEhITHx8fHx8eysrLZ2dnd3d3g4ODk5OTQ3OXf4uTe3t7Q2N7S
        0tLPz88UFBQAAAAAAAAAAAAAAAAAAABJSUm8vLyRkZGKioqLi4uMjIyNjY2Ojo6QkJCRkZGSkpKhoaHJ
        ycmjo6Oenp7AwMC1tbWampqmpqaurq7Hx8fi4uLNzc2SkpJ/f3+Ojo7AwMChoaGUlJScnJy+vr6xsbHa
        2trd3d3h4eHk5OS1usCIjI+coaS6wsjk5OSdnZ0AAAAAAAAAAAAAAAAAAAAAAAA0NDSGhoaIiIiJiYmK
        ioqLi4uMjIyNjY2Ojo6QkJC2tra2traampqbm5udnZ3Nzc21tbWmpqahoaGWlpampqa2trbHx8fc3Nzh
        4eHNzc3ExMS4uLh0dHSZmZm5ubmmpqba2tre3t7M19+ZscR/f3/IyMjIyMi/v7/J0NSoqqwAAAAAAAAA
        AAAAAAAAAAAAAABSUlKFhYWGhoaIiIiJiYmKioqLi4uMjIyUlJS8vLyioqKYmJiZmZmampqbm5va2tq1
        tbW1tbW1tbW1tbW1tbW1tbWts7a3t7fBwcHS0tLk5OTg4OCzs7OHh4eXl5fV1dXb29ve3t7i4uKgoaOQ
        kJCtra2zs7PIyMituMHBw8MAAAAAAAAAAAAAAAAAAAAAAABVVVWEhISFhYWGhoaHh4eJiYmKioqVlZWz
        s7OVlZWWlpaXl5eYmJiZmZmbm5vz8/O1tbW1tbW1tbW1tbW1tbW1tbVho78om81tq8WwvcLCwsLNzc3d
        3d3n5+fi4uLZ2dnb29vf39+/0d6MobF4eHiTk5OWlpbGxsa/wsXPz88AAAAAAAAAAAAAAAAAAAAAAABc
        XFyDg4OEhISFhYWGhoaIiIigoKCioqKSkpKTk5OUlJSWlpaXl5eYmJi7u7v////f39++vr61tbW1tbW1
        tbW1tbVeoLwQnNMRndkUndhAoMqNucvGycrPz8/W1tbl5eXs7Ozm5ubj4+Pk5OR/hId9fX2Pj4+ampvA
        2Orb29sAAAAAAAAAAAAAAAAAAAAAAABgYGCCgoKDg4OEhISEhISzs7OTk5OQkJCRkZGSkpKTk5OUlJSV
        lZXExMTw8PDs7Ozn5+fv7+/q6urPz8+4uLi1tbV1orYSmMQPmMIPmMUQnNMRndkdnNNcrM6rx9PV1dXY
        2Njc3NzU1NTd3d2mx+Da2tqkwtn19fX4+Pjp6ekAAAAAAAAAAAAAAAAAAAAAAABkZGSCgoKCgoKOjo6q
        qqqMjIyNjY2Pj4+QkJCRkZGSkpKamprX19fo6Ojk5OTj4+Pi4uLh4eHj4+Pi4uLp6eni4uLExMSQmJxT
        iJ8lkLkPl8APmMUQmskRndcRndksn9F8utTL2N3g4ODe3t7Y2dnQ0NDU2t729vb4+Pj29vYAAAAAAAAA
        AAAAAAAAAAAAAABqamp8fHytra2UlJSKioqLi4uMjIyNjY2Ojo6QkJCtra3f39/l5eXk5OTj4+Pj4+Pi
        4uLh4eHg4ODg4ODf39/f39/h4eHn5+fd3d25ubmClp5BiKcZlcAPmMURndkRndkRndkUndhHp9Gz0+Do
        6Ojm5ubd3d3Q0NDLy8vExMQAAAAAAAAAAAAAAAAAAAAAAABWVla+vr6IiIiIiIiJiYmKioqLi4uMjIyP
        j4+/v7/k5OTm5ubl5eXk5OTj4+Pj4+Pi4uLh4eHg4ODg4ODf39/e3t7d3d3d3d3d3d3k5OTm5ubb29uw
        sbJskaEyjLMUm9URndkRndkRndlClLjp6enNzc2zs7O2trbDw8OOjo4AAAAAAAAAAAAAAAAAAAAAAAAm
        JiaDg4OFhYWGhoaIiIiJiYmKioqbm5vT09Pn5+fm5ubm5ubl5eXk5OTj4+Pj4+Pi4uLh4eHg4ODg4ODf
        39/e3t7d3d3d3d3c3Nzb29va2trd3d3n5+fn5+fW1tagqKxUjKQlksARndk2kbfp6enr6+vOzs65ubnD
        w8O7u7sAAAAAAAAAAAAAAAAAAAAAAABHR0eDg4OEhISFhYWGhoaHh4exsbHj4+Po6Ojn5+fm5ubm5ubl
        5eXk5OTj4+Pj4+Pi4uLh4eHg4ODf39/f39/e3t7d3d3c3Nzc3Nzb29va2trZ2dnZ2dnY2Njf39/p6enr
        6+vPz8+Ln6hiipvq6uru7u7x8fH19fX4+PjV1dUAAAAAAAAAAAAAAAAAAAAAAABRUVGCgoKDg4OEhISD
        g4O6urrp6enp6eno6Ojn5+fm5ubm5ubl5eXk5OTj4+Pj4+Pi4uLh4eHg4ODf39/f39/e3t7d3d3c3Nzc
        3Nzb29va2trZ2dnZ2dnY2NjX19fW1tbX19fj4+Pr6+vt7e3r6+vu7u7y8vL19fX4+Pjm5uYAAAAAAAAA
        AAAAAAAAAAAAAABaWlqCgoKCgoKFhYXe3t7q6urp6enp6eno6Ojn5+fm5ubm5ubl5eXk5OTj4+Pj4+Pi
        4uLh4eHg4ODf39/f39/e3t7d3d3c3Nzc3Nzb29va2trZ2dnZ2dnY2NjX19fW1tbV1dXV1dXU1NTW1tbV
        1dXS0tLk5OT29vb4+Pj4+PgDAwMAAAAAAAAAAAAAAAAAAABjY2N/f3+np6fq6urq6urq6urp6enp6eno
        6Ojn5+fm5ubl5eXl5eXk5OTj4+Pi4uLi4uLh4eHg4ODf39/f39/e3t7d3d3c3Nzc3Nzb29va2trZ2dnZ
        2dnY2NjX19fW1tbV1dXV1dXU1NTT09PS0tLS0tLV1dXMzMzOzs7Nzc0AAAAAAAAAAAAAAAAAAAAAAABS
        UlLV1dXq6urq6urq6urq6urp6enp6eno6Ojn5+fm5ubl5eXl5eXk5OTj4+Pi4uLi4uLh4eHg4ODf39/f
        39/e3t7d3d3c3Nzb29vb29va2trZ2dnY2NjY2NjX19fW1tbV1dXV1dXU1NTT09PS0tLS0tLR0dHQ0NDP
        z8+Ojo4AAAAAAAAAAAAAAAAAAAAAAAAICAhUVFSvr6/o6Ojq6urq6urp6eno6Ojo6Ojn5+fm5ubl5eXl
        5eXk5OTj4+Pi4uLi4uLh4eHg4ODf39/f39/e3t7d3d3c3Nzb29vb29va2trZ2dnY2NjY2NjX19fW1tbV
        1dXV1dXU1NTT09PS0tLR0dHR0dHGxsZlZWUHBwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFxdl
        ZWW0tLTo6Ojo6Ojo6Ojn5+fm5ubl5eXl5eXk5OTj4+Pi4uLh4eHh4eHg4ODf39/e3t7e3t7d3d3c3Nzb
        29vb29va2trZ2dnY2NjY2NjX19fW1tbV1dXV1dXU1NTT09PS0tLPz8+BgYEUFBQAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaGhppaWm3t7fn5+fm5ubl5eXl5eXk5OTj4+Pi4uLh
        4eHh4eHg4ODf39/e3t7e3t7d3d3c3Nzb29vb29va2trZ2dnY2NjX19fX19fW1tbV1dXU1NTU1NTT09Od
        nZ0oKCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAeHh5ubm67u7vk5OTk5OTj4+Pi4uLh4eHh4eHg4ODf39/e3t7e3t7d3d3c3Nzb29vb29va2trZ2dnY
        2NjX19fX19fW1tbV1dXU1NS2trZDQ0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCRycnK+vr7i4uLh4eHh4eHg4ODf39/e
        3t7d3d3d3d3c3Nzb29va2tra2trZ2dnY2NjX19fX19fW1tbIyMhgYGAFBQUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAoKCh0dHTAwMDg4ODf39/e3t7d3d3d3d3c3Nzb29va2tra2trZ2dnY2NjX19fS0tJ3d3cR
        EREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLS16enrDw8Pd3d3d3d3c3Nzb
        29va2tra2trZ2dnY2NiTk5MeHh4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABAQExMTF9fX3FxcXb29va2trZ2dmvr682NjYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIoKChGRkY7OzsCAgIA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP//h////wAA//8B////AAD//AA///8AAP/4AA///wAA//AAAf//
        AAD/wAAAf/8AAP+AAAAP/wAA/wAAAAP/AAD8AAAAAH8AAPgAAAAAHwAA8AAAAAAHAADAAAAAAAMAAMAA
        AAAAAwAAwAAAAAADAADAAAAAAAMAAMAAAAAAAwAAwAAAAAADAADAAAAAAAMAAMAAAAAAAwAAwAAAAAAD
        AADAAAAAAAMAAMAAAAAAAQAAwAAAAAABAADAAAAAAAEAAMAAAAAAAQAAwAAAAAABAADAAAAAAAEAAMAA
        AAAAAQAAwAAAAAABAADAAAAAAAEAAMAAAAAAAQAAwAAAAAABAADAAAAAAAEAAMAAAAAAAQAAwAAAAAAB
        AADAAAAAAAEAAMAAAAAAAQAAwAAAAAADAADgAAAAAAcAAPwAAAAAHwAA/4AAAAB/AAD/8AAAAP8AAP/+
        AAAD/wAA///AAA//AAD///gAP/8AAP///wB//wAA////4f//AAA=
</value>
  </data>
</root>